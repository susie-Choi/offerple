"""Exploit Database collector for ROTA."""

import csv
import logging
from datetime import datetime
from io import StringIO
from pathlib import Path
from typing import Any, Dict, List

from .base import BaseCollector

logger = logging.getLogger(__name__)


class ExploitDBCollector(BaseCollector):
    """Collect exploit data from Exploit Database."""
    
    source_name = "exploit_db"
    CSV_URL = "https://gitlab.com/exploit-database/exploitdb/-/raw/main/files_exploits.csv"
    
    def collect(self, **kwargs) -> Dict[str, Any]:
        """Collect all exploits from Exploit-DB CSV."""
        logger.info("Fetching exploits from Exploit-DB...")
        
        response = self._request("GET", self.CSV_URL)
        csv_content = response.text
        csv_reader = csv.DictReader(StringIO(csv_content))
        
        exploits = list(csv_reader)
        
        logger.info(f"Collected {len(exploits)} exploits")
        
        return {
            "total_exploits": len(exploits),
            "exploits": exploits
        }
    
    def validate(self, data: Dict[str, Any]) -> bool:
        """Validate exploit data."""
        required_fields = ["id", "description"]
        return all(field in data for field in required_fields)


__all__ = ["ExploitDBCollector"]
